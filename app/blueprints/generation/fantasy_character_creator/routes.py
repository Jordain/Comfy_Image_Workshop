import json
import flask
import requests
import os

import urllib.request
import urllib.parse
import urllib.error

from flask import redirect, request, render_template, url_for, Blueprint, send_from_directory, current_app, session
from flask_login import login_required
from app.app import db

from app.blueprints.generation.helper import blueprint_add, generation_add, save_workflow, delete_workflow

fantasy_character_creator = Blueprint("fantasy_character_creator", __name__, template_folder='templates', static_folder='static')

# Need to import Blueprint after creating blueprint since that's the name of my model. Bad name need to fix later.
from app.models import Generation, Blueprint, Workflow

@fantasy_character_creator.route('/')
@login_required
def index():
    if(request.method == 'GET'):
        if(not Blueprint.query.filter_by(title="fantasy_character_creator").first() or Blueprint.query.filter_by(title="fantasy_character_creator").first().title != 'fantasy_character_creator'):
            blueprint_add('fantasy_character_creator', 2)
        workflow_display = Workflow.query.filter(Workflow.user_id == session['_user_id'], Workflow.blueprint_id == 2).all()
        base_url = '/generation/fantasy_character_creator'
    return render_template('fantasy_character_creator/index.html', base_url=base_url, workflow_display=workflow_display)

# This is to view the image generated by ComfyUI. 
@fantasy_character_creator.route("/<endpoint>", methods=['GET'])
@login_required
def get_endpoint(endpoint=None):
    args = flask.request.args
    if len(args) > 0:
        queries = urllib.parse.urlencode(dict(args))
        try:
            res = urllib.request.urlopen(
                f"http://127.0.0.1:8188/{endpoint}?{queries}")
            print(res.url)
            generation_add(res.url, Blueprint.query.filter_by(title="fantasy_character_creator").first().id)
            return res
        except urllib.error.HTTPError as e:
            return e.read()

    req = urllib.request.Request(
        f"http://127.0.0.1:8188/{endpoint}")
    try:
        response = urllib.request.urlopen(req)
        return response
    except urllib.error.HTTPError as e:
        return e.read()

# todo: 'add get and post to javascript or figure out how to make specfic routes '
# This is to generate the image by ComfyUI. Is this the only thing that generates and returns the image?
@fantasy_character_creator.route("/<endpoint>", methods=['POST'])
@login_required
def post_endpoint(endpoint=None):
    payload = flask.request.get_json()
    data = json.dumps(payload).encode('utf-8')
    req = urllib.request.Request(
        f"http://127.0.0.1:8188/{endpoint}", data=data)
    try:
        response = urllib.request.urlopen(req)
        return response
    except urllib.error.HTTPError as e:
        return e.read()
    
@fantasy_character_creator.route("/save", methods=['POST'])
@login_required
def save():
    try:
        title = request.form['save-title']
        desc = request.form['save-desc']
        wf_json_str = request.form['workflow']
        wf_json = json.loads(wf_json_str)['wf']
        save_workflow(Blueprint.query.filter_by(title="fantasy_character_creator").first().id, title, desc, wf_json)
        return redirect(url_for("fantasy_character_creator.index"))
    except KeyError as e:
        print(f"Error: {e} is missing in the form data.")
        # You can handle the error here, e.g., by returning an error response or redirecting to an error page
        return redirect(url_for("fantasy_character_creator.index"))  

# Talk to bren about this one. Delete later.
@fantasy_character_creator.route("/load", methods=['GET','POST'])
@login_required
def load():
    print("load")
    if(request.method == 'GET'):
        workflow_display = Workflow.query.filter(Workflow.user_id == session['_user_id']).all()
        return render_template('fantasy_character_creator/index.html', workflow_display=workflow_display)
    # if(request.method == 'POST'):
    #     load_id = request.form['load-id']
    #     worflow_form_data = Workflow.query.filter(user_id=session('_user_id') and Workflow.id == load_id ).first()
    #     return render_template('fantasy_character_creator/index.html', wf_form_data=worflow_form_data)

@fantasy_character_creator.route("/delete", methods=['POST'])
@login_required
def delete():
    try:
        print("delete")
        id = request.json['workflowID']
        delete_workflow(id)
        return redirect(url_for("fantasy_character_creator.index"))
    except KeyError as e:
        print(f"Error: {e} is missing in the form data.")
        # You can handle the error here, e.g., by returning an error response or redirecting to an error page
        return redirect(url_for("fantasy_character_creator.index"))